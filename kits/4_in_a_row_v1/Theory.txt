The circuit is based on an STM32F103 microcontroller. The microcontroller directly drives all LED individually by supplying power to their anodes. There is a Darlington array IC (ULN2003) which pull all LED's cathodes in a row to GND. The ULN2003 is also controlled by the microcontroller. This setup results in the game's LED matrix capable of being multiplexed to display any combination on the matrix while reducing power consumption. Other than that, there is a USB input connector, an optional reset switch for the microcontroller, a programming header, and a 3.3V regulator.
<br>
The complexity of the project mainly arises in the software. The software is programmed in the AC6 Workbench for STM32 environment. When the board is initialized, the STM32 starts by initializing the GPIO peripherals to set each pin to an input or output depending on what that pin is hooked up to. Then, Timer 7 is initialized to trigger every 1ms. When triggered, the timer will interrupt the program to a function titled "TIM6_IRQHandler", which drives the matrix's LEDs depending on the value of a global LED array which stores which colors on each LED of the matrix that will be lit-up. The LEDs are multiplexed, so the function cycles thru all rows one at a time. There is another array, called "players", that stores the "chips" on the board and who "placed" each one. There is functional called "playerToLed" that converts the information in this array to the global LED array to be displayed. This function is called upon during the game's loop when it wants to update the display. During the main game loop, when Timer 7 has not interrupted the program, the loop waits for one of the buttons to be pressed. When pressed, if the button is the left-most button at the top of the PCB, the game will reset itself. If the button pressed is one of the columns, it will find the row that isn't occupied by another "chip". Once found, it stores the player's ID (1 or 2) into the mentioned "players" array. The game then checks if there is a winner by the "checkForWinner" function, which checks the "players" array for 4 "chips" dropped by the same player 4 times in a row diagonally, horizontally, and vertically. If there is a winner, the game will stop and indicate which one. If both cases where there is a player or the game was manually reset, the right-most button on the top of the PCB(right below the indicator LED) can be pressed to restart the game loop.
